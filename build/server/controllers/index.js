// Generated by CoffeeScript 1.8.0
var CozyInstance, FavoriteTag, Task, async, fs, getTemplateExtension, path;

fs = require('fs');

path = require('path');

async = require('async');

Task = require('../models/tasky');

CozyInstance = require('../models/cozy_instance');

FavoriteTag = require('../models/favorite_tag');

getTemplateExtension = function() {
  var extension, filePath, runFromBuild;
  filePath = path.resolve(__dirname, '../../client/index.js');
  runFromBuild = fs.existsSync(filePath);
  extension = runFromBuild ? 'js' : 'jade';
  return extension;
};

module.exports.main = function(req, res) {
  return async.parallel({
    tasks: function(done) {
      return Task.allNotArchived(done);
    },
    archivedTasks: function(done) {
      return Task.allArchived(done);
    },
    locale: function(done) {
      return CozyInstance.getLocale(done);
    },
    favoriteTags: function(done) {
      return FavoriteTag.allForTasky(done);
    }
  }, function(err, results) {
    var archivedTasks, extension, favoriteTags, locale, tasks;
    if (err != null) {
      return res.send({
        error: 'Server error occurred while retrieving data',
        stack: err.stack
      });
    } else {
      tasks = results.tasks, archivedTasks = results.archivedTasks, locale = results.locale, favoriteTags = results.favoriteTags;
      extension = getTemplateExtension();
      return res.render("index." + extension, {
        imports: "window.locale = \"" + locale + "\";\nwindow.tasks = " + (JSON.stringify(tasks)) + ";\nwindow.archivedTasks = " + (JSON.stringify(archivedTasks)) + ";\nwindow.favoriteTags = " + (JSON.stringify(favoriteTags)) + ";"
      });
    }
  });
};
